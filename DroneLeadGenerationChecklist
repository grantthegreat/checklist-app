import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Checkbox } from '@/components/ui/checkbox';
import { Progress } from '@/components/ui/progress';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

// Checklist data
const initialChecklist = [
  {
    title: "Content Marketing",
    items: [
      "Blog posts on drone applications, industry trends, and case studies",
      "E-books on drone technology advancements or industry-specific uses",
      "Whitepapers on drone regulations and compliance",
      "Infographics showcasing drone capabilities and benefits",
      "Video tutorials on drone operation and maintenance"
    ]
  },
  {
    title: "Email Marketing",
    items: [
      "Weekly or bi-weekly newsletter with industry updates and company news",
      "Automated email sequences for new subscribers",
      "Segmented email lists based on industry, interests, or engagement level",
      "Periodic special offers or promotions via email"
    ]
  },
  {
    title: "Social Media",
    items: [
      "Regular posts on LinkedIn, Twitter, and Facebook",
      "Engaging visual content on Instagram and YouTube",
      "Participation in relevant LinkedIn groups and Twitter chats",
      "Paid social media advertising campaigns",
      "Employee advocacy program for wider reach"
    ]
  },
  // Add more categories here as needed
];

// Individual checklist item component
const ChecklistItem = ({ item, isChecked, onToggle }) => (
  <div className="flex items-center space-x-2 mb-2">
    <Checkbox 
      id={item} 
      checked={isChecked} 
      onCheckedChange={onToggle}
    />
    <Label 
      htmlFor={item} 
      className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
    >
      {item}
    </Label>
  </div>
);

// Checklist category component
const ChecklistCategory = ({ category, checkedItems, onItemToggle, onAddItem }) => {
  const [newItem, setNewItem] = useState('');

  const handleAddItem = () => {
    if (newItem.trim()) {
      onAddItem(category.title, newItem.trim());
      setNewItem('');
    }
  };

  return (
    <Card className="mb-4">
      <CardHeader>
        <CardTitle>{category.title}</CardTitle>
      </CardHeader>
      <CardContent>
        {category.items.map((item, index) => (
          <ChecklistItem
            key={index}
            item={item}
            isChecked={checkedItems[item] || false}
            onToggle={() => onItemToggle(item)}
          />
        ))}
        <div className="flex items-center mt-4">
          <Input
            type="text"
            placeholder="Add new item"
            value={newItem}
            onChange={(e) => setNewItem(e.target.value)}
            className="mr-2"
          />
          <Button onClick={handleAddItem}>Add</Button>
        </div>
      </CardContent>
    </Card>
  );
};

// Progress component
const ProgressDisplay = ({ checkedItemsCount, totalItems }) => {
  const progress = (checkedItemsCount / totalItems) * 100;

  return (
    <Card className="mb-4">
      <CardContent>
        <h2 className="text-lg font-semibold mb-2">Overall Progress</h2>
        <Progress value={progress} className="w-full" />
        <p className="mt-2">
          {checkedItemsCount} of {totalItems} tasks completed ({progress.toFixed(1)}%)
        </p>
      </CardContent>
    </Card>
  );
};

// Main checklist component
const DroneLeadGenerationChecklist = () => {
  const [checklist, setChecklist] = useState(initialChecklist);
  const [checkedItems, setCheckedItems] = useState({});

  const handleItemToggle = (item) => {
    setCheckedItems(prev => ({ ...prev, [item]: !prev[item] }));
  };

  const handleAddItem = (categoryTitle, newItem) => {
    setChecklist(prevChecklist => 
      prevChecklist.map(category => 
        category.title === categoryTitle
          ? { ...category, items: [...category.items, newItem] }
          : category
      )
    );
  };

  const totalItems = checklist.reduce((sum, category) => sum + category.items.length, 0);
  const checkedItemsCount = Object.values(checkedItems).filter(Boolean).length;

  return (
    <div className="max-w-4xl mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Commercial Drone Business Lead Generation Checklist</h1>
      
      <ProgressDisplay 
        checkedItemsCount={checkedItemsCount} 
        totalItems={totalItems} 
      />

      {checklist.map((category, index) => (
        <ChecklistCategory
          key={index}
          category={category}
          checkedItems={checkedItems}
          onItemToggle={handleItemToggle}
          onAddItem={handleAddItem}
        />
      ))}
    </div>
  );
};

export default DroneLeadGenerationChecklist;
